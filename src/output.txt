None
-i simple.qasm
Setting infile
-v 
Verbose mode
simple.qasm 
Starting QEDA Manager
Verbosity setup complete
Opening simple.qasm
Lines
// Blah //
OPENQASM 2.0;
X(1);
X(2);
CX 1,2;
CX 2,1;
MEASURE 1 -> 0;
MEASURE 2 -> 1;

Tokens
<rply.lexer.LexerStream object at 0x7efc6109abe0>
Verbosity setup complete
setting float
2.0
['X']
setting id
X
setting int
1
uop
[Token('ID', 'X'), Token('PAREN_OPEN', '('), <qeda.qast_primitives.Int object at 0x7efc59065f98>, Token('PAREN_CLOSE', ')'), Token('SEMI_COLON', ';')]
a
[Token('ID', 'X'), Token('PAREN_OPEN', '('), <qeda.qast_primitives.Int object at 0x7efc59065f98>, Token('PAREN_CLOSE', ')'), Token('SEMI_COLON', ';')]
X Gate
Creating statement!
Creating program!
['X']
setting id
X
setting int
2
uop
[Token('ID', 'X'), Token('PAREN_OPEN', '('), <qeda.qast_primitives.Int object at 0x7efc59035b38>, Token('PAREN_CLOSE', ')'), Token('SEMI_COLON', ';')]
a
[Token('ID', 'X'), Token('PAREN_OPEN', '('), <qeda.qast_primitives.Int object at 0x7efc59035b38>, Token('PAREN_CLOSE', ')'), Token('SEMI_COLON', ';')]
X Gate
Creating statement!
Creating program!
setting int
1
arg
[<qeda.qast_primitives.Int object at 0x7efc59065cf8>]
setting int
2
arg
[<qeda.qast_primitives.Int object at 0x7efc59065f28>]
uop
[Token('CX', 'CX'), <qeda.qast_primitives.Int object at 0x7efc59065cf8>, Token('COMMA', ','), <qeda.qast_primitives.Int object at 0x7efc59065f28>, Token('SEMI_COLON', ';')]
CX Gate
An error occurred.
'Int' object is not iterable
